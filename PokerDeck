import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;
import java.util.Map;
import java.util.Random;
import java.util.Set;
import java.util.TreeMap;
import java.util.TreeSet;


public class PokerDeck {

	private List<PlayingCard> deck;
	private Map<HAND_TYPE, Integer> results;
	private Set<PlayingCard> hand;

	public PokerDeck() {
		deck = new ArrayList<PlayingCard>();
		results = new TreeMap<HAND_TYPE, Integer>();
		hand = new TreeSet<PlayingCard>();

		for (VALIDSUITS the_suit : VALIDSUITS.values()) {
			// System.out.println("inside VALIDSUITS the_suit :...");
			for (VALIDRANKS the_rank : VALIDRANKS.values()) {
				// System.out.println("Inside for(VALIDRANKS the_rank...");
				deck.add(new PlayingCard(the_suit, the_rank));

			}
		}

	}

	public static void main(String... args) {
		PokerDeck pd1 = new PokerDeck();
		// Change i<1 to i<100000
		for (int i = 0; i < 1; i++) {
			pd1.deal();
			
		}
		

	}

	public void printDeckUsingIterator(List<PlayingCard> deckq) {
		Iterator<PlayingCard> iter = deckq.iterator();
		while (iter.hasNext()) {
			PlayingCard card = iter.next();
			System.out.println(card.rank + " of " + card.suit);
		}
	}

	public List<PlayingCard> shuffle(List<PlayingCard> deckq) {
		ArrayList<PlayingCard> newDeck = new ArrayList<>(deckq);
		int deckSize = newDeck.size();

		Random rand = new Random();
		
		for (int i = 0; i < 51; i++) {
			int index1 = rand.nextInt(deckSize);
			int index2 = rand.nextInt(deckSize);
			PlayingCard card1 = newDeck.get(index1);
			PlayingCard card2 = newDeck.get(index2);
			newDeck.set(index2, card1);
			newDeck.set(index1, card2);
		}

		return newDeck;
	}

	public Boolean deal() {
		Boolean retVal = true;
		PlayingCard card;
		hand.clear();
		deck = shuffle(deck);
		for (int i = 0; i < 5; i++) {
			card = deck.get(i);
			 hand.add(card);
			 //System.out.println(hand.add(card));
			 /*System.out.println( hand);
			//System.out.println(card.rank + " of " + card.suit);
			System.out.println("*******************************");*/
		}
		
		System.out.println("The size of the hand is: "+ hand.size());
		
		return retVal;
	}

	public Integer rank_hand() {
		Integer retVal = 0;

		return retVal;
	}

	public enum HAND_TYPE {
		FLUSH, FOUR_OF_A_KIND, FULL_HOUSE
	}

	@Override
	public boolean equals(Object arg0) {
		System.out.println("in equals");
		// TODO Auto-generated method stub
		return super.equals(arg0);
	}

	@Override
	public int hashCode() {
		// TODO Auto-generated method stub
		return super.hashCode();
	}


}
